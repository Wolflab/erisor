# parse into Polycots, GHseeds, Maternals
Polycots <- msat_data_7Nov16[1:30,]
GHSeeds1 <- msat_data_7Nov16[31:115,]
GHSeeds2 <- msat_data_7Nov16[134:166,]
GHSeeds3 <- msat_data_7Nov16[184:257,]
Maternals1 <- msat_data_7Nov16[116:133,]
Maternals2 <- msat_data_7Nov16[169:183,]
Maternals3 <- msat_data_7Nov16[258:262,]
GHSeeds <- rbind(GHSeeds1,GHSeeds2,GHSeeds3)
Maternals <- rbind(Maternals1, Maternals2, Maternals3)
# check for missing data
which(is.na(Maternals))
which(is.na(GHSeeds))
which(is.na(Polycots))
# to approach without a loop:
Maternals[11:21,1:4] # this is a slice that has several homozygotes
Maternals_homoz <- within(Maternals,P86_2[P86_2 == 0] <- P86_1[P86_2 == 0])
# conditional index needs to be repeated in both sides
Maternals_homoz[11:21,1:4]
# works
# now make this a function for the whole dataset:
# a2 is a vector of second alleles (characters) - will make a function to get this vector later.
a2vector <- c("P86_2","W20_2","W20_2","W17_2","W15_2","W14_2","W14_2","P58_2","P71_2","P10_2") #a2 column names
score_homoz <- function (data,a2vector) {
a2vector_indices <- which(colnames(data) %in% a2vector)  # to get a1 column indices
a1vector_indices <- a2vector_indices -1 # to get a2 column indices
a1vector <- colnames(data[,a1vector_indices]) # a1 column names
for (i in a2vector) for (j in a1vector) {
data_homoz <- within(data,i[i == 0] <- j[i == 0])
}
return(data_homoz)
}
score_homos(Maternals,a2vector)
Maternals[11:21,1:4]
data[11:21,1:4]
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
msat_data_7Nov16 <- read.csv("/Users/Paul13/Desktop/Karen_msat_data/Compiled_7Nov16.csv", header = TRUE, sep = ",")
msat_data_7Nov16 <- read.csv("/Users/Paul13/Desktop/Karen_msat_data/Compiled_7Nov16.csv", header = TRUE, sep = ",", row.names = 1)
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
#data[11:21,1:3]
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
Maternals[11:21,1:4]
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
source('~/Desktop/Karen_msat_data/Msats_7Nov16_Parsing.R')
Maternals[11:21,1:4]
Maternals[11:21,1:4] # this is a slice that has several homozygotes
Maternals_homoz <- within(Maternals,P86_2[P86_2 == 0] <- P86_1[P86_2 == 0])
# conditional index needs to be repeated in both sides
Maternals_homoz[11:21,1:4]
source('~/Dropbox/docs_wolf/Python_files/2016_Programming/r-world-Wolflab/wolf_terrain.R')
source('~/Dropbox/docs_wolf/Python_files/2016_Programming/r-world-Wolflab/wolf_terrain.R')
print(terrain.matrix)
image(terrain.matrix)
is.prime <- function(x){
if(x==1)
return(FALSE)
for(each in (x-1):2)
if((x %% each) == 0)
return(FALSE)
return(TRUE)
}
is.prime(3)
is.prime(10)
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
ggplot(loan_data, aes(Year,Loans_sent)) + geom_line()
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
ggplot(loan_data, aes(Year,Loans_sent)) + geom_line()# + labs(x = 'Loans Sent')
ggplot(loan_data, aes(Year,Loans_sent)) + geom_line() + labs(x = 'Loans Sent')
ggplot(loan_data, aes(Year,Loans_sent)) + geom_line() + labs(x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year,Loans_sent)) + geom_line() + labs(title= "Loans Sent", x = 'Year', y = "Loans Sent")
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year,Loans_sent)) + geom_line() + labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year,Loans_sent)) + geom_line(color = "blue") + labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "blue")) + labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent)) + labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "red")) + labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) + labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) + + geom_line(aes(y = Total_specimens, color = "Total_specimens"))labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) + + geom_line(aes(y = Total_specimens, color = "Total_specimens"))labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) + geom_line(aes(y = Total_specimens, color = "Total_specimens")) + labs(title= "Loans Sent",
x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) +
geom_line(aes(y = Total_specimens, color = "Total_specimens"))
+ labs(title= "Loans Sent", x = 'Year', y = "Loans Sent")
dev.off()
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) +
geom_line(aes(y = Total_specimens, color = "Total_specimens"))
+ labs(title= "Loans Sent", x = 'Year', y = "Loans Sent")
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) +
geom_line(aes(y = Total_specimens, color = "Total_specimens"))
+ labs(title= "Loans Sent", x = 'Year')
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans_sent, color = "Loans Sent")) +
geom_line(aes(y = Total_specimens, color = "Total_specimens"))
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans, color = "Loans")) +
geom_line(aes(y = Specimens, color = "Specimens"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans, color = "Loans")) +
geom_line(aes(y = Specimens, color = "Specimens"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Loans, color = "Loans")) +
geom_line(aes(y = Specimens, color = "Specimens"))
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Database, color = "Database")) +
geom_line(aes(y = Specimens, color = "Specimens"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Database, color = "Database")) +
geom_line(aes(y = Specimens, color = "Specimens"))
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Database, color = "Database"))
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Database, color = "Database"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/gg.R')
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Database, color = "Database"))# +
ggplot(loan_data, aes(Year)) + geom_line(aes(y = Database, color = "Database")) +
geom_line(aes(y = Specimens, color = "Specimens"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
plot(loan.data$Year, loan.data$Database_total, type="l", col="blue", axes=F, xlab=NA, ylab=NA)
plot(loan.data$Year,loan.data$Loans_sent, type = "l", col="red", xlab = "Year", ylab = "Loans Sent")
# Now, draw the second plot on top of the first using the par(new=T)
par(new=TRUE)
# Now make the second plot:
plot(loan.data$Year, loan.data$Database_total, type="l", col="blue", axes=F, xlab=NA, ylab=NA)
#put label on other side of plot
axis(4)
mtext(side=4,line=3, "Database Total")
legend("bottomright",col=c("red","blue"),lty=1,legend=c("Loans Sent","Database Total"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
plot(loan.data$Year,loan.data$Loans_sent, type = "l", col="red", xlab = "Year", ylab = "Loans Sent")
par(new=TRUE)
plot(loan.data$Year, loan.data$Total_specimens, type="l", col="blue", axes=F, xlab=NA, ylab=NA)
axis(4)
mtext("y2",side=4,line=3)
legend("bottomright",col=c("red","blue"),lty=1,legend=c("Loans Sent","Total Specimens"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
head(loan.data)
library(ggplot2)
library(wesanderson)
library(gridExtra)
############## FOR STACKED BAR GRAPHS ###################
## read in data
data <- read.csv("repeat2.csv", header=TRUE)
## set color scheme
ordered = c("#C6CDF7", "#675599", "#956D34", "#D6CABF", "#D69FA0", "#308BC4", "#75CAE5", "#00A08A", "#77A63B", "#E5DC21", "#F2AD00", "#F98400")
## Make a variable to set the order of the facets, in this case by species. If you don't want to do this, in the ggplot code do ( ! species) insted of species_f. Can use this to order them in any way you want.
data$species_f = factor(data$species, levels=c('Ceratopteris', 'Cystopteris', 'Dipteris', 'Plagiogyria', 'Polypodium', 'Pteridium', 'Amborella', 'Vitis', 'Zea', 'Gnetum','Pinus','Taxus'))
## In this one they're ordered by genome size, ferns then seed plants (same as phylogeny in scatterplot)
#data$species_f = factor(data$species, levels=c('Polypodium', 'Cystopteris', 'Ceratopteris', 'Pteridium', 'Plagiogyria', 'Dipteris', 'Amborella','Vitis', 'Zea', 'Gnetum','Pinus','Taxus'))
## barplot1 - One possible ordering of classes within the bar graph
#data$class = factor(data$class, levels=c('Non-repetitive', 'Satellite', 'RC', 'Simple_repeat', 'rRNA', 'LTR_Other','LTR_Gypsy', 'LTR_Copia', 'Low complexity', 'LINE', 'DNA', 'Unknown_repeat'))
## barplot2 - Another order, this ends up looking better:
data$class = factor(data$class, levels=c('Non repetitive', 'LINE', 'LTR (Other)','LTR (Gypsy)', 'LTR (Copia)', 'rRNA', 'Satellite', 'Simple repeat', 'Low complexity','Rolling Circle', 'DNA transposons', 'Unknown repeat'))
## ggplot code to make the actual figure
#pdf(file="Paul_play.pdf", paper="USr")
ggplot() +
geom_bar(data=data, aes(y = proportion, x = run, fill = class, order=-as.numeric(class)), stat="identity", position='stack') +
theme_bw() +
theme(strip.text.x=element_text(size=8, face="italic")) +
facet_grid( ~ species_f) + scale_fill_manual(values= ordered) +
labs(x="Sample number", y="% of genome")
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansK[1].R')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansKa.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansKa.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loansKa.R')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
plot(loan.data$Year,loan.data$Loans_sent, type = "l", col="red", xlab = "Year", ylab = "Loans Sent")
# Now, draw the second plot on top of the first using the par(new=T)
par(new=TRUE)
# Now make the second plot:
#plot(loan.data$Year, loan.data$Database_total, type="l", col="blue", axes=F, xlab=NA, ylab=NA)
#put label on other side of plot
axis(4)
mtext(side=4,line=-2, "Database Total")
legend("bottomright",col=c("red","blue"),lty=1,legend=c("Loans Sent","Database Total"))
head (loan.data)
lot(loan.data$Year,loan.data$Loans_sent, type = "l", col="red", xlab = "Year", ylab = "Loans Sent")
# Now, draw the second plot on top of the first using the par(new=T)
par(new=TRUE)
# Now make the second plot:
#plot(loan.data$Year, loan.data$Database_total, type="l", col="blue", axes=F, xlab=NA, ylab=NA)
#put label on other side of plot
axis(4)
mtext(side=4,line=-2, "Database Total")
legend("bottomright",col=c("red","blue"),lty=1,legend=c("Loans Sent","Database Total"))
plot(loan.data$Year,loan.data$Loans_sent, type = "l", col="red", xlab = "Year", ylab = "Loans Sent")
# Now, draw the second plot on top of the first using the par(new=T)
par(new=TRUE)
# Now make the second plot:
#plot(loan.data$Year, loan.data$Database_total, type="l", col="blue", axes=F, xlab=NA, ylab=NA)
#put label on other side of plot
axis(4)
mtext(side=4,line=-2, "Database Total")
legend("bottomright",col=c("red","blue"),lty=1,legend=c("Loans Sent","Database Total"))
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
lm.out
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
lm.out
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
lm.out
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loan_stats.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print(F.to.C(50))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print(F.to.C(5))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/Python_files/R/temp.convert.R')
source('~/Dropbox/docs_wolf/Python_files/R/temp.convert.R')
?plot
source('~/Dropbox/docs_wolf/Python_files/R/temp.convert.R')
source('~/Dropbox/docs_wolf/Python_files/R/temp.convert.R')
print(F.to.C(-1))
source('~/.active-rstudio-document')
head(msat.data)
source('~/.active-rstudio-document')
locus.names
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/Python_files/R/Karen_msat_data/sum_third_alleles.R')
source('~/Dropbox/docs_wolf/Committees/Herbarium_USU_UTC/Herbarium_data_plots/loans.vs.db.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
??hist
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
# import csv file (I manually removed the rows with #N/A values)
file.pathway <- '/Users/Paul13/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/'
file.name <- 'ages_for_paul.csv'
input <- paste(file.pathway, file.name, sep = "")
# Read in data to data frame
paul.data <- read.csv(input, row.names=1, header=TRUE)
#names(msat.data)[1]<-"Sample"
head(paul.data)
library(ggplot2)
# Create histogram with age column.
# Add the bar outline color, bar fill color, number of bins, add title, x and y labels.
# Added the xlim(0,160) b/c default scale terminated in 150 which got cut off in pdf file
p <- ggplot(paul.data, aes(x=age)) +
geom_histogram(color="black", fill="purple", bins = 80) + ggtitle("Frequency of hybrid vs. million years divergence between parents") + xlab("Node Age") + ylab("Frequency") + xlim(0,160)
p + theme(
plot.title = element_text(color="black", size=15, face="bold", hjust=0.5, vjust=0.5),
axis.title.x = element_text(color="black", size=14, face="bold"),
axis.title.y = element_text(color="black", size=14, face="bold"),
text = element_text(size=15)
)
source('~/.active-rstudio-document')
p
source('~/.active-rstudio-document')
curve(x^2, from=1, to=50, , xlab="x", ylab="y")
curve(2*(p(1-p)), from=0, to=1, , xlab="x", ylab="y")
plot.function(x^2, from = 0, to = 1, n = 101, ...)
plot.function(x^2, from = 0, to = 1)
plot(x^2, from = 0, to = 1)
plot(p, p*(1p)*2 from = 0, to = 1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot (p, p^2, col="red", type = "l")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
p=seq(0.0, 1.0, 0.001)
plot(p, p*(1-p)*2, col = "green", type = "l")
par(new=TRUE)
plot (p, p^2, col = "red", type = "l", axes=FALSE)
par(new=TRUE)
plot (p, (1-p)^2, col="blue", type = "l", axes=FALSE)
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
source('~/Dropbox/docs_wolf/students/Current students/Jenessa Lemon/comprehensive exams/hw.R')
lines(p, q*q, type = "l", col = "green") #this line adds the A1 homozygote frequency
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source("https://bioconductor.org/biocLite.R")
detach("package:datasets", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:utils", unload=TRUE)
library("utils", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
?biocLite
biocLite()
library("datasets", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("graphics", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("stats", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("wesanderson", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages and tree/node_plot.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_plot.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_age_Carol.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_age_Carol.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_age_Carol.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_age_Carol.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_age_Carol.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Grants_and_proposals/Dennstaedtioid_proposal_2016/node_ages/node_age_Carol.R', echo=TRUE)
install.packages("installr")
install.packages("installr")
install.packages('devtools')
library(devtools)
devtools::install_github("AndreaCirilloAC/updateR")
library(updateR)
updateR(admin_password = 'spunspun11')
source('~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/Initial GBS analysis/regres_reads_loci/loci_reads_regression.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/Initial GBS analysis/regres_reads_loci/loci_reads_regression.R', echo=TRUE)
library(compare)
before = read.csv("before.csv", header = FALSE)
after = read.csv("after.csv", header = FALSE)
before
after
for(i in before[1,]){
if(i == after[])      #i is not in after, print "oops"
}
install.packages(compare)
library(compare)
before = read.csv("before.csv", header = FALSE)
after = read.csv("after.csv", header = FALSE)
before
after
for(i in before[1,]){
if(i == after[]){
if i not %in% after{
print("oops")
}
}      #i is not in after, print "oops"
}
for(i in before[1,]){
if(i == after[]){
if i not %in% after{
print("oops")
}
}      #i is not in after, print "oops"
}
source('~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/erisor/barcodes_file/barcodes_check.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/erisor/barcodes_file/barcodes_check.R', echo=TRUE)
source('~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/erisor/barcodes_file/barcodes_check.R', echo=TRUE)
install.packages(compare)
library(compare)
before = read.csv("before.csv", header = FALSE)
after = read.csv("after.csv", header = FALSE)
before
after
source('~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/erisor/barcodes_file/barcodes_check.R', echo=TRUE)
install.packages(compare)
library(compare)
before <- read.csv("before.csv", header = FALSE)
after <- read.csv("after.csv", header = FALSE)
before
after
setwd("~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/erisor/barcodes_file")
setwd("~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/erisor/barcodes_file")
install.packages(compare)
library(compare)
before <- read.csv("before.csv", header = FALSE)
after <- read.csv("after.csv", header = FALSE)
before
after
source('~/Dropbox/docs_wolf/Manuscripts_and_Projects/Eriogonum_soredium_not_shared/erisor/barcodes_file/barcodes_check.R', echo=TRUE)
install.packages(compare)
library(compare)
before <- read.csv("before.csv", header = FALSE)
after <- read.csv("after.csv", header = FALSE)
before[1,]
